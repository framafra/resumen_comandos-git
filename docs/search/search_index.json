{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Resumen de Comandos git git init .- inicializa un repositorio. git add .- a\u00f1ade elementos de la copia de trabajo (working) en el control de versiones (\u00e1rea de preparado o staging). git add .- A\u00f1ade todos los elementos de la copia de trabajo (working) git add .- A\u00f1ade el fichero de la copia de trabajo (working) git status .- muestra el estado de la copia de trabajo (working). git commit .- sube los cambios de la copia de trabajo bajo el control de versiones (que est\u00e1n en zona de intercambio personal) (working) en el repositorio local. git commit -m \u201cMensaje de la versi\u00f3n\u201d .- Se a\u00f1ade un mensaje a la versi\u00f3n para as\u00ed localizarla con mayor facilidad. git commit --amend -m \u201cMensaje modificado\u201d .- Cambia el mensaje de la \u00faltima versi\u00f3n (HEAD) git log .- muestra la lista de versiones subidas en el repositorio local. git log --oneline .- muestra las versiones subidas en local de forma resumida. git log --graph --all --oneline .- muestra un resumen de las versiones subidas, de manera gr\u00e1fica, \u00fatil cuando trabajamos con ramas. git annotate .- Muestra en pantalla los los usuarios que han modificado el fichero git checkout -- .- Recupera el fichero de la \u00faltima versi\u00f3n de nuestro repositorio (HEAD). git checkout -- .- Recupera todos los ficheros de la \u00faltima versi\u00f3n de nuestro repositorio (HEAD). git checkout .- Cambiar a la rama git checkout \u2013b .- crea una rama y cambia a esa rama. git reset .- elimina el fichero de la zona de intercambio temporal (staging area) git reset --soft HEAD~1 .- deshace el \u00faltimo commit, pero mantiene los cambios en la zona de intercambio temporal (staging area). git reset --hard HEAD~1 .- deshace el \u00faltimo commit, dejando los fichero tal y como se guardaron en la versi\u00f3n anterior, en la que apunta ahora el HEAD. git branch .- crea nueva rama . git branch \u2013av .- muestra las ramas del repositorio git branch \u2013d .- elimina la rama git diff .- muestra los cambios que se han a\u00f1adido en una versi\u00f3n. git diff ...HEAD .- Compara los cambios entre dos versiones. git merge .- fusiona los cambios entre dos ramas. Fusiona la con la rama en la que estoy actualmente. git show .- muestra informaci\u00f3n sobre la versi\u00f3n indicada. git push .- sube los cambios del repositorio local a un repositorio remoto. git pull .- baja los cambios de un repositorio remoto al repositorio local. git remote .- a\u00f1ade un repositorio remoto o lista los repositorios remotos enlazados con el repositorio local. git remote \u2013v .- muestra los repositorios remotos configurados git remote add URL .- configura un dispositivo remoto con el nombre . archivo .gitignore .- permite a\u00f1adir una lista de archivos y directorios para excluir del sistema de control de versiones.","title":"Home"},{"location":"#resumen-de-comandos-git","text":"git init .- inicializa un repositorio. git add .- a\u00f1ade elementos de la copia de trabajo (working) en el control de versiones (\u00e1rea de preparado o staging). git add .- A\u00f1ade todos los elementos de la copia de trabajo (working) git add .- A\u00f1ade el fichero de la copia de trabajo (working) git status .- muestra el estado de la copia de trabajo (working). git commit .- sube los cambios de la copia de trabajo bajo el control de versiones (que est\u00e1n en zona de intercambio personal) (working) en el repositorio local. git commit -m \u201cMensaje de la versi\u00f3n\u201d .- Se a\u00f1ade un mensaje a la versi\u00f3n para as\u00ed localizarla con mayor facilidad. git commit --amend -m \u201cMensaje modificado\u201d .- Cambia el mensaje de la \u00faltima versi\u00f3n (HEAD) git log .- muestra la lista de versiones subidas en el repositorio local. git log --oneline .- muestra las versiones subidas en local de forma resumida. git log --graph --all --oneline .- muestra un resumen de las versiones subidas, de manera gr\u00e1fica, \u00fatil cuando trabajamos con ramas. git annotate .- Muestra en pantalla los los usuarios que han modificado el fichero git checkout -- .- Recupera el fichero de la \u00faltima versi\u00f3n de nuestro repositorio (HEAD). git checkout -- .- Recupera todos los ficheros de la \u00faltima versi\u00f3n de nuestro repositorio (HEAD). git checkout .- Cambiar a la rama git checkout \u2013b .- crea una rama y cambia a esa rama. git reset .- elimina el fichero de la zona de intercambio temporal (staging area) git reset --soft HEAD~1 .- deshace el \u00faltimo commit, pero mantiene los cambios en la zona de intercambio temporal (staging area). git reset --hard HEAD~1 .- deshace el \u00faltimo commit, dejando los fichero tal y como se guardaron en la versi\u00f3n anterior, en la que apunta ahora el HEAD. git branch .- crea nueva rama . git branch \u2013av .- muestra las ramas del repositorio git branch \u2013d .- elimina la rama git diff .- muestra los cambios que se han a\u00f1adido en una versi\u00f3n. git diff ...HEAD .- Compara los cambios entre dos versiones. git merge .- fusiona los cambios entre dos ramas. Fusiona la con la rama en la que estoy actualmente. git show .- muestra informaci\u00f3n sobre la versi\u00f3n indicada. git push .- sube los cambios del repositorio local a un repositorio remoto. git pull .- baja los cambios de un repositorio remoto al repositorio local. git remote .- a\u00f1ade un repositorio remoto o lista los repositorios remotos enlazados con el repositorio local. git remote \u2013v .- muestra los repositorios remotos configurados git remote add URL .- configura un dispositivo remoto con el nombre . archivo .gitignore .- permite a\u00f1adir una lista de archivos y directorios para excluir del sistema de control de versiones.","title":"Resumen de Comandos git"}]}